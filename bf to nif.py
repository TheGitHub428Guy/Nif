#This can be used to convert Brain[frick] programs into Nif.
#This is only to prove Turing-Completeness and is very inefficient.
a = input()
s = ""
sub = {
     "": ("", "", "bf_init  &&-&~&&&&~&&-~--&~~[&&-~&~~&~&&-~--&&-~&~&&---&~~]-&&-~"),
    "+": ("\nbf_inc*  ",   "&&--",                                                  "&~~&~&&--&&--~&~~&&&&&&-----~-&&--[&&-~&~~&&&&---~-&~~&~&&--&&--~&~~&&&&&&-----~-&&--]"),
    "-": ("\nbf_dec*  &~", "&&--",                                                  "-&~~&~&&-~-[&&-~&~~&&&&---~&~&&-~--&~~&~&&-~-]"),
    "<": ("",              "\nbf_left  &~&&--&&--&-~&&-~&~~&~&&-~-[&&-~&~&~]",      ""),
    ">": ("",              "\nbf_right &&-~&&~&&---~&~~&~&&-~-[&~&&--&&--&-~&~&~]", ""),
    ".": ("",              "\nbf_out   &~~;",                                       ""),
    ",": ("",              "\nbf_in    [&~]&&-;", "&~~&~&&--&&--~&~~&&&&&&-----~-&&--[&&-~&~~&&&&---~-&~~&~&&--&&--~&~~&&&&&&-----~-&&--]&~~&~&&-~-[&&-~&~~&&&&---~&~&&-~--&~~&~&&-~-]"),
    "[": ("",              "\nbf_while &~~[",                                       ""),
    "]": ("",              "\nbf_end   &~~]",                                       ""),
    "#": ("\n    ", "#", "")}
last = "" #""=initial, "#"=comment
for i in a:
    if i in sub:
        if i != last:
            s += sub[last][2]
            last = i
            s += sub[i][0]
        s += sub[i][1]
    else:
        if last != "#":
            s += sub[last][2]
            last = "#"
            s += sub["#"][0]
        s += i
print(s)